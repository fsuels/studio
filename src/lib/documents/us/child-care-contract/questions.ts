// src/lib/documents/us/child-care-contract/questions.ts
import type { FormQuestion } from '@/types/documents';

export const childCareContractQuestions: FormQuestion[] = [
  {
    id: 'parentName',
    type: 'text',
    label: 'Parent/Guardian Name',
    placeholder: 'Enter parent or guardian name',
    required: true,
    group: 'parent',
  },
  {
    id: 'providerName',
    type: 'text',
    label: 'Childcare Provider Name',
    placeholder: 'Enter babysitter/nanny name',
    required: true,
    group: 'provider',
  },
  {
    id: 'childName',
    type: 'text',
    label: 'Child Name',
    placeholder: 'Enter child full name',
    required: false,
    group: 'child',
  },
  {
    id: 'childAge',
    type: 'text',
    label: 'Child Age',
    placeholder: 'Enter child age',
    required: false,
    group: 'child',
  },
  {
    id: 'careType',
    type: 'select',
    label: 'Type of Care',
    options: [
      { value: 'ongoing', label: 'Ongoing Regular Care' },
      { value: 'occasional', label: 'Occasional Babysitting' },
      { value: 'temporary', label: 'Temporary Care' },
      { value: 'emergency', label: 'Emergency Care' },
    ],
    required: false,
    group: 'schedule',
  },
  {
    id: 'hourlyRate',
    type: 'text',
    label: 'Hourly Rate',
    placeholder: 'Enter hourly payment rate',
    required: false,
    group: 'payment',
  },
  {
    id: 'regularSchedule',
    type: 'textarea',
    label: 'Regular Schedule',
    placeholder: 'Describe regular care schedule',
    required: false,
    group: 'schedule',
  },
  {
    id: 'childAllergies',
    type: 'textarea',
    label: 'Child Allergies',
    placeholder: 'List any allergies or medical conditions',
    required: false,
    group: 'child',
  },
  {
    id: 'emergencyContact',
    type: 'text',
    label: 'Emergency Contact',
    placeholder: 'Enter emergency contact person',
    required: false,
    group: 'emergency',
  },
  {
    id: 'drivingRequired',
    type: 'boolean',
    label: 'Driving required?',
    required: false,
    group: 'transportation',
  },
  {
    id: 'mealsProvided',
    type: 'select',
    label: 'Meals Provided By',
    options: [
      { value: 'parent', label: 'Parent' },
      { value: 'provider', label: 'Provider' },
      { value: 'shared', label: 'Shared Responsibility' },
    ],
    required: false,
    group: 'meals',
  },
  {
    id: 'backgroundCheck',
    type: 'boolean',
    label: 'Background check required?',
    required: false,
    group: 'verification',
  },
];
