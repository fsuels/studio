
> nextn@0.1.0 lint
> eslint "src/**/*.{js,jsx,ts,tsx}" scripts --no-error-on-unmatched-pattern src/app/[locale]/(marketing)/templates/templates-client-content.tsx


C:\dev\123legaldoc\src\app\api\admin\ai-usage\route.ts
  508:23  warning  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type

C:\dev\123legaldoc\src\app\api\marketplace\revenue\connect\route.ts
  3:10  warning  'getStripeServerClient' is defined but never used. Allowed unused vars must match /^_/u  @typescript-eslint/no-unused-vars

C:\dev\123legaldoc\src\lib\__tests__\stripe-integration.test.ts
  18:7  warning  Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-var-requires')

C:\dev\123legaldoc\src\lib\security\csp-alert-metrics.ts
  34:5  warning  Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-var-requires' or 'global-require')

C:\dev\123legaldoc\src\types\hookform-resolvers.d.ts
  9:15  warning  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  9:20  warning  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

Γ£û 6 problems (0 errors, 6 warnings)
  0 errors and 2 warnings potentially fixable with the `--fix` option.

