from pathlib import Path
path = Path(r'src\\__tests__\\dynamic-form.test.tsx')
text = path.read_text(encoding='utf-8')
old = "  Select: ({ children, ...props }: any) => {\n    const ariaLabelledby =\n      props['aria-labelledby'] ?? props['ariaLabelledby'];\n    const { ['aria-labelledby']: _ignored1, ['ariaLabelledby']: _ignored2, ...rest } = props;\n    return (\n      <div role=\"combobox\" aria-labelledby={ariaLabelledby} {...rest}>\n        {children}\n      </div>\n    );\n  },\n  SelectContent: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n  SelectItem: ({ children, value }: any) => <div data-value={value}>{children}</div>,\n  SelectTrigger: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n  SelectValue: ({ placeholder, ...props }: any) => (\n    <div {...props}>{placeholder}</div>\n  ),\n"
new = "  Select: ({ children, onValueChange, value, name, ...props }: any) => {\n    const ariaLabelledby = props['aria-labelledby'] ?? props['ariaLabelledby'];\n    const rest = { ...props };\n    delete rest['aria-labelledby'];\n    delete rest['ariaLabelledby'];\n    delete rest['onValueChange'];\n    delete rest['value'];\n    delete rest['name'];\n    return (\n      <select\n        role=\"combobox\"\n        aria-labelledby={ariaLabelledby}\n        value={value ?? ''}\n        name={name}\n        onChange={(event) => onValueChange?.(event.target.value)}\n        {...rest}\n      >\n        {React.Children.toArray(children)}\n      </select>\n    );\n  },\n  SelectContent: ({ children }: any) => <>{children}</>,\n  SelectItem: ({ children, value }: any) => <option value={value}>{children}</option>,\n  SelectTrigger: ({ children }: any) => <>{children}</>,\n  SelectValue: ({ placeholder }: any) => (placeholder ? <option value="">{placeholder}</option> : null),\n"
if old not in text:
    raise SystemExit('select mock snippet not found')
text = text.replace(old, new, 1)
path.write_text(text, encoding='utf-8')
