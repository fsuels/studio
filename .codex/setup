#!/usr/bin/env bash
set -euo pipefail

# ╔══════════════════════════════════════════════════════════════════════════╗
# ║  Codex bootstrap: install dependencies + Next.js build (skip export/LHCI) ║
# ╚══════════════════════════════════════════════════════════════════════════╝

export npm_config_loglevel=error
echo "🔧  [setup] Installing dependencies and building Next.js…"

###############################################################################
# 1 — Dependency installation                                                 #
###############################################################################
if [[ -f pnpm-lock.yaml ]]; then
  corepack enable pnpm
  echo "📦  Installing via pnpm ci"
  pnpm install --frozen-lockfile --prefer-offline
elif [[ -f yarn.lock ]]; then
  corepack enable yarn
  echo "📦  Installing via yarn install"
  yarn install --immutable --check-cache
else
  echo "📦  Installing via npm ci"
  npm ci --prefer-offline --no-audit --progress=false
fi

###############################################################################
# 2 — Persist Firebase key into .env                                           #
###############################################################################
if [[ -n "${FIREBASE_SERVICE_ACCOUNT_KEY_JSON:-}" ]]; then
  echo "🗝   Writing FIREBASE_SERVICE_ACCOUNT_KEY_JSON to .env"
  printf "FIREBASE_SERVICE_ACCOUNT_KEY_JSON='%s'\n" \
    "${FIREBASE_SERVICE_ACCOUNT_KEY_JSON}" > .env
fi

###############################################################################
# 3 — Next.js build (skip static export and LHCI to keep under 300 s)         #
###############################################################################
echo "🛠   Running npm run build"
npm run build

###############################################################################
# 4 — Do NOT run `npm run export` or LHCI here (would exceed 300 s)          #
###############################################################################
echo "⚠️   Skipping `next export` and `lhci autorun` to avoid 300 s timeout."

###############################################################################
# 5 — Helpful global tools (silent)                                           #
###############################################################################
npm install -g eslint prettier typescript firebase-tools > /dev/null 2>&1 || true

echo "✅  [setup] Dependencies installed and site built (ready for Codex)."
