#!/usr/bin/env bash
set -euo pipefail

# ╔══════════════════════════════════════════════════════════════════════════╗
# ║  Codex bootstrap: minimal setup only (skip npm ci & next build) to avoid  ║
# ║  300 s timeout.                                                            ║
# ╚══════════════════════════════════════════════════════════════════════════╝

export npm_config_loglevel=error

echo "🔧  [setup] Starting minimal environment bootstrap…"

# 1️⃣  Persist Firebase key (if Codex injected it)
if [[ -n "${FIREBASE_SERVICE_ACCOUNT_KEY_JSON:-}" ]]; then
  printf "FIREBASE_SERVICE_ACCOUNT_KEY_JSON='%s'\n" \
    "${FIREBASE_SERVICE_ACCOUNT_KEY_JSON}" >> .env
fi

# 2️⃣  Skip installing all dependencies and skip building the Next.js site.
#     (npm ci + npm run build routinely exceed 300 s on a fresh workspace.)
echo "⚠️   Skipping 'npm ci' and 'npm run build' to prevent startup timeout."

# 3️⃣  Install only the small CLIs Codex sometimes calls (these are quick)
npm install -g eslint prettier typescript firebase-tools > /dev/null 2>&1

echo "✅  Minimal setup finished – ready for Codex."
