{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(npm test:*)",
      "Bash(npx tsx:*)",
      "Bash(node:*)",
      "Bash(chmod:*)",
      "Bash(npm run build:*)",
      "Bash(grep:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run type-check:*)",
      "Bash(npx typescript:*)",
      "Bash(timeout:*)",
      "Bash(npm run quality-check:*)",
      "Bash(npm run:*)",
      "Bash(mv:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== Processing $file ===\")",
      "Bash(sed:*)",
      "Bash(done)",
      "Bash(do echo \"=== Adding id back to questions in $file ===\")",
      "Bash(perl:*)",
      "Bash(do echo \"Fixing $file\")",
      "Bash(/home/user/studio/fix_remaining_files.sh:*)",
      "Bash(python3:*)",
      "Bash(/home/user/studio/add_ids_final.sh:*)",
      "Bash(rm:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(pkill:*)",
      "Bash(npm install)",
      "Bash(test:*)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(npx next:*)",
      "Bash(yarn --version)",
      "Bash(do)",
      "Bash(if grep -q \"import.*from.*\\.\\./\\.\\./types\" \"$file\")",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(wc:*)",
      "Bash(npm:*)",
      "Bash(curl:*)",
      "Bash(npx ts-node:*)",
      "Bash(do if [ -d \"$dir\" ])",
      "Bash(then echo \"Directory $dir exists, files:\")",
      "Bash(else echo \"Directory $dir does not exist\")",
      "Bash(do echo -n \"$doc: \")",
      "Bash(if [ -f \"$doc/index.ts\" ])",
      "Bash([ -f \"$doc/metadata.ts\" ])",
      "Bash([ -f \"$doc/schema.ts\" ])",
      "Bash([ -f \"$doc/questions.ts\" ])",
      "Bash(then echo \"✓ Complete\")",
      "Bash(else echo \"✗ Missing files\")",
      "Bash(if [ -f \"public/templates/en/$doc.md\" ])",
      "Bash(then echo \"✓ EN template exists\")",
      "Bash(else echo \"✗ EN template missing\")",
      "Bash(rg:*)",
      "Bash(cat:*)",
      "Bash(/mnt/c/Users/Fsuels/OneDrive/Desktop/123legaldoc/studio-master/create_construction_docs.sh:*)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(./create_remaining_docs.sh:*)",
      "Bash(touch:*)",
      "Bash(./cleanup-duplicate-docs.sh:*)",
      "Bash(#!/bin/bash\n# Remove definite duplicates\nrm -f templates/affidavit.*\nrm -f templates/nda.*\nrm -f templates/oil-gas-lease.*\nrm -f templates/patent-licensing-agreement.*\nrm -f templates/web-development-agreement.*\nrm -f templates/offer-letter.*)",
      "Bash(\"/mnt/c/Users/Fsuels/OneDrive/Desktop/123legaldoc/studio-master/update-disclaimers.sh\")",
      "Bash(./update-footer.sh)",
      "Bash(./revert-footer.sh:*)",
      "Bash(npx eslint:*)",
      "Bash(npx jest:*)",
      "Bash(do echo \"=== $module ===\")",
      "Bash(head:*)",
      "Bash(jobs)",
      "Bash(git checkout:*)",
      "WebFetch(domain:www.alea.gov)",
      "WebFetch(domain:eforms.com)",
      "WebFetch(domain:www.flhsmv.gov)",
      "WebFetch(domain:mvd.dor.ga.gov)",
      "WebFetch(domain:itd.idaho.gov)",
      "WebFetch(domain:www.kdor.ks.gov)",
      "WebFetch(domain:www.mva.maryland.gov)",
      "WebFetch(domain:dojmt.gov)",
      "WebFetch(domain:www.dot.nd.gov)",
      "WebFetch(domain:transportation.wv.gov)",
      "Bash(true)",
      "Bash(fuser:*)",
      "Bash(awk:*)",
      "Bash(npx playwright test:*)",
      "Bash(NODE_ENV=development node -e \"console.log('Testing require...');\")",
      "Bash(firebase deploy:*)",
      "Bash(npx firebase-tools:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(TURBOPACK=0 npm run dev)",
      "Bash(ENABLE_CDN=true node test-fix.js)",
      "Bash(next dev:*)",
      "Bash(cp:*)",
      "Bash(if [ -f \"/mnt/c/dev/123legaldoc/public/assets/us/$state/vehicle-bill-of-sale/config.json\" ])",
      "Bash(diff:*)"
    ],
    "deny": []
  }
}