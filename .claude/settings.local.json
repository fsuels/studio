{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(npm test:*)",
      "Bash(npx tsx:*)",
      "Bash(node:*)",
      "Bash(chmod:*)",
      "Bash(npm run build:*)",
      "Bash(grep:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run type-check:*)",
      "Bash(npx typescript:*)",
      "Bash(timeout:*)",
      "Bash(npm run quality-check:*)",
      "Bash(npm run:*)",
      "Bash(mv:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== Processing $file ===\")",
      "Bash(sed:*)",
      "Bash(done)",
      "Bash(do echo \"=== Adding id back to questions in $file ===\")",
      "Bash(perl:*)",
      "Bash(do echo \"Fixing $file\")",
      "Bash(/home/user/studio/fix_remaining_files.sh:*)",
      "Bash(python3:*)",
      "Bash(/home/user/studio/add_ids_final.sh:*)",
      "Bash(rm:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(pkill:*)",
      "Bash(npm install)",
      "Bash(test:*)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(npx next:*)",
      "Bash(yarn --version)",
      "Bash(do)",
      "Bash(if grep -q \"import.*from.*\\.\\./\\.\\./types\" \"$file\")",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(wc:*)",
      "Bash(npm:*)",
      "Bash(curl:*)",
      "Bash(npx ts-node:*)",
      "Bash(do if [ -d \"$dir\" ])",
      "Bash(then echo \"Directory $dir exists, files:\")",
      "Bash(else echo \"Directory $dir does not exist\")",
      "Bash(do echo -n \"$doc: \")",
      "Bash(if [ -f \"$doc/index.ts\" ])",
      "Bash([ -f \"$doc/metadata.ts\" ])",
      "Bash([ -f \"$doc/schema.ts\" ])",
      "Bash([ -f \"$doc/questions.ts\" ])",
      "Bash(then echo \"✓ Complete\")",
      "Bash(else echo \"✗ Missing files\")",
      "Bash(if [ -f \"public/templates/en/$doc.md\" ])",
      "Bash(then echo \"✓ EN template exists\")",
      "Bash(else echo \"✗ EN template missing\")",
      "Bash(rg:*)",
      "Bash(cat:*)",
      "Bash(/mnt/c/Users/Fsuels/OneDrive/Desktop/123legaldoc/studio-master/create_construction_docs.sh:*)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(./create_remaining_docs.sh:*)",
      "Bash(touch:*)"
    ],
    "deny": []
  }
}